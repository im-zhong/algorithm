project(array)

add_executable(test_leetcode_26_remove_duplicates_from_sorted_array leetcode_26_remove_duplicates_from_sorted_array.cpp)
target_link_libraries(test_leetcode_26_remove_duplicates_from_sorted_array PRIVATE doctest::doctest)

add_executable(test_leetcode_27_remove_element leetcode_27_remove_element.cpp)
target_link_libraries(test_leetcode_27_remove_element PRIVATE doctest::doctest)

add_executable(test_leetcode_283_move_zeroes leetcode_283_move_zeroes.cpp)
target_link_libraries(test_leetcode_283_move_zeroes PRIVATE doctest::doctest)

add_executable(test_leetcode_34_find_first_and_last_position_of_element_in_sorted_array leetcode_34_find_first_and_last_position_of_element_in_sorted_array.cpp)
target_link_libraries(test_leetcode_34_find_first_and_last_position_of_element_in_sorted_array PRIVATE doctest::doctest)

add_executable(test_leetcode_167_two_sum_ii_input_array_is_sorted leetcode_167_two_sum_ii_input_array_is_sorted.cpp)
target_link_libraries(test_leetcode_167_two_sum_ii_input_array_is_sorted PRIVATE doctest::doctest)

add_executable(test_leetcode_344_reverse_string leetcode_344_reverse_string.cpp)
target_link_libraries(test_leetcode_344_reverse_string PRIVATE doctest::doctest)

add_executable(test_leetcode_5_longest_palindromic_substring leetcode_5_longest_palindromic_substring.cpp)
target_link_libraries(test_leetcode_5_longest_palindromic_substring PRIVATE doctest::doctest)

add_executable(test_leetcode_76_minimum_window_substring leetcode_76_minimum_window_substring.cpp)
target_link_libraries(test_leetcode_76_minimum_window_substring PRIVATE doctest::doctest)

add_executable(test_leetcode_567_permutation_in_string leetcode_567_permutation_in_string.cpp)
target_link_libraries(test_leetcode_567_permutation_in_string PRIVATE doctest::doctest)

add_executable(test_leetcode_438_find_all_anagrams_in_a_string leetcode_438_find_all_anagrams_in_a_string.cpp)
target_link_libraries(test_leetcode_438_find_all_anagrams_in_a_string PRIVATE doctest::doctest)

add_executable(test_leetcode_3_longest_substring_without_repeating_characters leetcode_3_longest_substring_without_repeating_characters.cpp)
target_link_libraries(test_leetcode_3_longest_substring_without_repeating_characters PRIVATE doctest::doctest)

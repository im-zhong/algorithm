project(binary_tree)

# 每个文件之间都不需要有依赖，这样是最简单的，每个文件都可以是一个单独的可执行文件
# 也就是一个单独的doctest
add_executable(test_binary_heap binary_heap.cpp)
target_link_libraries(test_binary_heap PRIVATE doctest::doctest)

# no
# # Register with CTest for better test management
# include(CTest)
# add_test(NAME test_binary_heap COMMAND test_binary_heap)

add_executable(test_leetcode_111_minimum_depth_of_binary_tree leetcode_111_minimum_depth_of_binary_tree.cpp)
target_link_libraries(test_leetcode_111_minimum_depth_of_binary_tree PRIVATE doctest::doctest)

add_executable(test_leetcode_104_maximum_depth_of_binary_tree leetcode_104_maximum_depth_of_binary_tree.cpp)
target_link_libraries(test_leetcode_104_maximum_depth_of_binary_tree PRIVATE doctest::doctest)

add_executable(test_leetcode_144_binary_tree_preorder_traversal leetcode_144_binary_tree_preorder_traversal.cpp)
target_link_libraries(test_leetcode_144_binary_tree_preorder_traversal PRIVATE doctest::doctest)

add_executable(test_binary_tree binary_tree.cpp)
target_link_libraries(test_binary_tree PRIVATE doctest::doctest)

add_executable(test_leetcode_543_diameter_of_binary_tree leetcode_543_diameter_of_binary_tree.cpp)
target_link_libraries(test_leetcode_543_diameter_of_binary_tree PRIVATE doctest::doctest)

add_executable(test_segment_tree segment_tree.cpp)
target_link_libraries(test_segment_tree PRIVATE doctest::doctest)

add_executable(test_leetcode_307_range_sum_query_mutable leetcode_307_range_sum_query_mutable.cpp)
target_link_libraries(test_leetcode_307_range_sum_query_mutable PRIVATE doctest::doctest)
